import { TypeNode, ListTypeNode, NamedTypeNode, NameNode, NonNullTypeNode, StringValueNode, UnionTypeDefinitionNode } from 'graphql';
export declare function gqlNameNode(name: string): NameNode;
export interface UnionTypeOptions {
    name: NameNode;
    description?: StringValueNode;
    types: Array<NamedTypeNode>;
}
export declare function gqlUnionType({ name, description, types }: UnionTypeOptions): UnionTypeDefinitionNode;
export declare function gqlNamedTypeNode(name: string): NamedTypeNode;
export declare function gqlListTypeNode(type: TypeNode): ListTypeNode;
export declare function gqlMaybeRequiredNode(type: NamedTypeNode | ListTypeNode, required: boolean): NonNullTypeNode | NamedTypeNode | ListTypeNode;
export declare function gqlStripRequired(type: NonNullTypeNode | NamedTypeNode | ListTypeNode): NamedTypeNode | ListTypeNode;
export declare function isRequired(type: NonNullTypeNode | NamedTypeNode | ListTypeNode): type is NonNullTypeNode;
