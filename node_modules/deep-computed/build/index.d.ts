declare type RecursiveComputable<T, Root> = {
    [K in keyof T]: T[K] extends object ? RecursiveComputable<T[K], Root> : T[K] | ((arg: Root) => T[K]);
};
export declare type Computable<T> = RecursiveComputable<T, T>;
export declare const deepComputed: <O>(obj: RecursiveComputable<O, O>) => O;
export default deepComputed;
