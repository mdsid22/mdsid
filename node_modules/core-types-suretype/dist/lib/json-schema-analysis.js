"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.analyzeSchema = void 0;
const json_schema_cycles_1 = require("json-schema-cycles");
const toposort = require("toposort");
function analyzeSchema(schema) {
    const { graph, cyclic, dependencies, dependents } = (0, json_schema_cycles_1.analyzeTypesFast)(schema);
    const cycledSchemas = new Set([...cyclic, ...dependencies, ...dependents]);
    const nonCyclic = graph
        .filter(([from]) => !cycledSchemas.has(from))
        .flatMap(([from, to]) => to.length === 0
        ? [[from, undefined]]
        : to.map(node => [from, node]));
    const sorted = toposort(nonCyclic)
        .filter(val => val !== undefined)
        .reverse()
        .filter(type => !cycledSchemas.has(type));
    return { nonCyclic: sorted, cyclic: [...cycledSchemas] };
}
exports.analyzeSchema = analyzeSchema;
