"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getNames = exports.createdByUrl = exports.createdByPackage = void 0;
exports.createdByPackage = "core-types-suretype";
exports.createdByUrl = "https://github.com/grantila/core-types-suretype";
const capitalize = (text) => text.charAt(0).toUpperCase() + text.slice(1);
function ensureNonGlobalName(name) {
    return name === 'Finite' || name === 'NaN' ? `_${name}` : name;
}
function getNames(name) {
    const typeName = capitalize(name
        .replace(/^[^a-zA-Z_]+/, '')
        .replace(/[^a-zA-Z0-9_$]+$/, '')
        .replace(/[^a-zA-Z0-9_$]+(.)/g, (_m, cap) => cap.toUpperCase()));
    const validatorSchemaName = `schema${typeName}`;
    const regularValidatorName = `validate${typeName}`;
    ;
    const ensureValidatorName = `ensure${typeName}`;
    ;
    const typeGuardValidatorName = `is${ensureNonGlobalName(typeName)}`;
    return {
        typeName,
        validatorSchemaName,
        regularValidatorName,
        ensureValidatorName,
        typeGuardValidatorName,
    };
}
exports.getNames = getNames;
