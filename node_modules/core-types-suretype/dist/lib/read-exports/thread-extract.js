"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.extractJsonSchema = void 0;
const worker_threads_1 = require("worker_threads");
const path = require("path");
const types_1 = require("./types");
const wrapper = path.join(__dirname, 'child-runner-wrapper.js');
async function extractJsonSchema(file, refMethod, onTopLevelNameConflict) {
    const response = await new Promise(resolve => {
        const workerData = {
            file,
            refMethod,
            onTopLevelNameConflict,
        };
        const worker = new worker_threads_1.Worker(wrapper, { workerData });
        worker.on('message', resolve);
        worker.on('error', err => {
            resolve({
                ok: false,
                error: (0, types_1.serializeError)(err),
            });
        });
        worker.on('exit', code => {
            if (code !== 0)
                resolve({
                    ok: false,
                    error: {
                        name: 'Error',
                        message: `Worker stopped with exit code ${code}`,
                    },
                });
        });
    });
    if (!response.ok) {
        const err = new Error(response.error.message);
        err.name = response.error.name;
        if (response.error.stack)
            err.stack = response.error.stack;
        throw err;
    }
    return response;
}
exports.extractJsonSchema = extractJsonSchema;
;
