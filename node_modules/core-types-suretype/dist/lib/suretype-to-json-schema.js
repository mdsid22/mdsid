"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.convertSuretypeToJsonSchema = void 0;
const core_types_json_schema_1 = require("core-types-json-schema");
const path = require("path");
const read_exports_1 = require("./read-exports");
const async_error_1 = require("./async-error");
async function convertSuretypeToJsonSchema(filename, options = {}) {
    var _a;
    const { warn = console.warn.bind(console), refMethod = 'provided', nameConflict = 'error', } = options !== null && options !== void 0 ? options : {};
    const { result, error } = await (0, async_error_1.catchError)(() => (0, read_exports_1.extractJsonSchema)(filename, refMethod, nameConflict === 'rename' ? 'rename' : 'error'));
    if (error) {
        if (((_a = error.name) === null || _a === void 0 ? void 0 : _a.startsWith('Duplicate')) && nameConflict === 'warn')
            warn(error.message, error);
        else
            throw error;
    }
    if (!result)
        return { data: {}, convertedTypes: [], notConvertedTypes: [] };
    (0, core_types_json_schema_1.decorateSchema)(result.jsonSchema, { sourceFilename: path.basename(filename), ...options }, 'core-types-suretype', 'https://github.com/grantila/core-types-suretype');
    return {
        data: result.jsonSchema,
        convertedTypes: Object.keys(result.jsonSchema.definitions),
        notConvertedTypes: [],
    };
}
exports.convertSuretypeToJsonSchema = convertSuretypeToJsonSchema;
