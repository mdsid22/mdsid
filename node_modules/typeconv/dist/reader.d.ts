import type { NodeDocument, WarnFunction, ConversionResult } from "core-types";
import type { SyncOrAsync, TypeImplementation } from "./types";
export interface ReaderOptions {
    warn: WarnFunction;
    filename?: string;
}
export declare type ReaderFunction = (data: string, opts: ReaderOptions) => SyncOrAsync<ConversionResult<NodeDocument>>;
export declare type ShortcutReaderFunction = (data: string, opts: ReaderOptions) => SyncOrAsync<ConversionResult<string>>;
export interface Reader {
    kind: TypeImplementation;
    read: ReaderFunction;
    managedRead?: boolean;
    shortcut?: Partial<Record<TypeImplementation, ShortcutReaderFunction>>;
}
