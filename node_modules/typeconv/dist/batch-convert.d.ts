import { Converter } from "./converter";
export interface BatchConvertOptions {
    outputDirectory?: string;
    outputExtension: string;
    verbose?: boolean;
    dryRun?: boolean;
    concurrency?: number;
}
export interface BatchConvertGlobOptions extends BatchConvertOptions {
    hidden?: boolean;
    filesTransform?: (files: Array<string>) => Array<string>;
}
export interface BatchConvertResult {
    files: number;
    types: number;
}
export declare function batchConvert(converter: Converter, filenames: Array<string>, options: BatchConvertOptions): Promise<BatchConvertResult>;
export declare function batchConvertGlob(converter: Converter, globs: Array<string>, options: BatchConvertGlobOptions): Promise<BatchConvertResult>;
