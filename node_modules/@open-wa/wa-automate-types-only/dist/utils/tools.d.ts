import { ConfigObject, DataURL } from '../api/model';
import { AxiosRequestConfig } from 'axios';
import { SessionInfo } from '../api/model/sessionInfo';
export declare const timeout: (ms: any) => Promise<unknown>;
/**
 *  Use this to generate a more likely valid user agent. It makes sure it has the WA part and replaces any windows or linux os info with mac.
 * @param useragent Your custom user agent
 * @param v The WA version from the debug info. This is optional. default is 2.2117.5
 */
export declare const smartUserAgent: (ua: string, version?: string) => string;
export declare const getConfigFromProcessEnv: any;
export declare const without: any;
export declare const camelize: (str: string) => string;
export declare const isBase64: (str: string) => boolean;
export declare const isDataURL: (s: string) => boolean;
/**
 * @internal
 * A convinience method to download the [[DataURL]] of a file
 * @param url The url
 * @param optionsOverride You can use this to override the [axios request config](https://github.com/axios/axios#request-config)
 * @returns Promise<DataURL>
 */
export declare const getDUrl: (url: string, optionsOverride?: AxiosRequestConfig) => Promise<DataURL>;
/**
 * @internal
 * Use this to extract the mime type from a [[DataURL]]
 */
export declare const base64MimeType: (dUrl: DataURL) => string;
export declare const processSend: (message: string) => void;
export declare const processSendData: (data?: any) => void;
export declare const generateGHIssueLink: (config: ConfigObject, sessionInfo: SessionInfo, extras?: any) => string;
